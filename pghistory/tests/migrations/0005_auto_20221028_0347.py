# Generated by Django 3.2.16 on 2022-10-28 03:47
# flake8: noqa

from django.db import migrations, models
import django.db.models.deletion
import pgtrigger.compiler
import pgtrigger.migrations


class Migration(migrations.Migration):

    dependencies = [
        ("tests", "0004_auto_20221010_2039"),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name="custommodel",
            name="snapshot_insert",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="custommodel",
            name="snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="custommodel",
            name="int_field_updated",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="denormcontext",
            name="snapshot_no_id_insert",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="denormcontext",
            name="snapshot_no_id_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="denormcontext",
            name="snapshot_insert",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="denormcontext",
            name="snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="eventmodel",
            name="model_create",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="eventmodel",
            name="before_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="eventmodel",
            name="before_delete",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="eventmodel",
            name="model_custom_create",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="eventmodel",
            name="model_custom_create_with_context",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="eventmodel",
            name="after_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="snapshotimagefield",
            name="snapshot_insert",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="snapshotimagefield",
            name="snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="snapshotmodel",
            name="no_pgh_obj_snapshot_insert",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="snapshotmodel",
            name="no_pgh_obj_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="snapshotmodel",
            name="snapshot_insert",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="snapshotmodel",
            name="snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="snapshotmodel",
            name="dt_field_int_field_snapshot_insert",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="snapshotmodel",
            name="dt_field_snapshot_insert",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="snapshotmodel",
            name="custom_snapshot_insert",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="snapshotmodel",
            name="dt_field_int_field_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="snapshotmodel",
            name="dt_field_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="snapshotmodel",
            name="custom_snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="uniqueconstraintmodel",
            name="snapshot_insert",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="uniqueconstraintmodel",
            name="snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="usergroups",
            name="group_add",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="usergroups",
            name="group_remove",
        ),
        migrations.AddField(
            model_name="customeventmodel",
            name="pgh_operation",
            field=models.IntegerField(
                choices=[(1, "Insert"), (2, "Update"), (3, "Delete")], null=True
            ),
        ),
        migrations.AddField(
            model_name="customeventwithcontext",
            name="pgh_operation",
            field=models.IntegerField(
                choices=[(1, "Insert"), (2, "Update"), (3, "Delete")], null=True
            ),
        ),
        migrations.AddField(
            model_name="custommodelevent",
            name="pgh_operation",
            field=models.IntegerField(
                choices=[(1, "Insert"), (2, "Update"), (3, "Delete")], null=True
            ),
        ),
        migrations.AddField(
            model_name="custommodelsnapshot",
            name="pgh_operation",
            field=models.IntegerField(
                choices=[(1, "Insert"), (2, "Update"), (3, "Delete")], null=True
            ),
        ),
        migrations.AddField(
            model_name="customsnapshotmodel",
            name="pgh_operation",
            field=models.IntegerField(
                choices=[(1, "Insert"), (2, "Update"), (3, "Delete")], null=True
            ),
        ),
        migrations.AddField(
            model_name="denormcontextevent",
            name="pgh_operation",
            field=models.IntegerField(
                choices=[(1, "Insert"), (2, "Update"), (3, "Delete")], null=True
            ),
        ),
        migrations.AddField(
            model_name="denormcontexteventnoid",
            name="pgh_operation",
            field=models.IntegerField(
                choices=[(1, "Insert"), (2, "Update"), (3, "Delete")], null=True
            ),
        ),
        migrations.AddField(
            model_name="eventmodelevent",
            name="pgh_operation",
            field=models.IntegerField(
                choices=[(1, "Insert"), (2, "Update"), (3, "Delete")], null=True
            ),
        ),
        migrations.AddField(
            model_name="nopghobjevent",
            name="pgh_operation",
            field=models.IntegerField(
                choices=[(1, "Insert"), (2, "Update"), (3, "Delete")], null=True
            ),
        ),
        migrations.AddField(
            model_name="nopghobjsnapshot",
            name="pgh_operation",
            field=models.IntegerField(
                choices=[(1, "Insert"), (2, "Update"), (3, "Delete")], null=True
            ),
        ),
        migrations.AddField(
            model_name="snapshotimagefieldevent",
            name="pgh_operation",
            field=models.IntegerField(
                choices=[(1, "Insert"), (2, "Update"), (3, "Delete")], null=True
            ),
        ),
        migrations.AddField(
            model_name="snapshotmodeldtfieldevent",
            name="pgh_operation",
            field=models.IntegerField(
                choices=[(1, "Insert"), (2, "Update"), (3, "Delete")], null=True
            ),
        ),
        migrations.AddField(
            model_name="snapshotmodeldtfieldintfieldevent",
            name="pgh_operation",
            field=models.IntegerField(
                choices=[(1, "Insert"), (2, "Update"), (3, "Delete")], null=True
            ),
        ),
        migrations.AddField(
            model_name="snapshotmodelsnapshot",
            name="pgh_operation",
            field=models.IntegerField(
                choices=[(1, "Insert"), (2, "Update"), (3, "Delete")], null=True
            ),
        ),
        migrations.AddField(
            model_name="uniqueconstraintmodelevent",
            name="pgh_operation",
            field=models.IntegerField(
                choices=[(1, "Insert"), (2, "Update"), (3, "Delete")], null=True
            ),
        ),
        migrations.AddField(
            model_name="usergroupsevent",
            name="pgh_operation",
            field=models.IntegerField(
                choices=[(1, "Insert"), (2, "Update"), (3, "Delete")], null=True
            ),
        ),
        migrations.AlterField(
            model_name="customsnapshotmodel",
            name="pgh_obj",
            field=models.ForeignKey(
                db_constraint=False,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                related_name="custom_related_name",
                to="tests.snapshotmodel",
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="custommodel",
            trigger=pgtrigger.compiler.Trigger(
                name="int_field_updated",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."integer_field" IS DISTINCT FROM NEW."integer_field")',
                    func='INSERT INTO "tests_custommodelevent" ("integer_field", "my_pk", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (NEW."integer_field", NEW."my_pk", _pgh_attach_context(), NOW(), \'int_field_updated\', NEW."my_pk", 2); RETURN NULL;',
                    hash="cec03797412a68b44ad98795014b77dccd619478",
                    operation="UPDATE",
                    pgid="pgtrigger_int_field_updated_a1031",
                    table="tests_custommodel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="custommodel",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_custommodelsnapshot" ("integer_field", "my_pk", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (NEW."integer_field", NEW."my_pk", _pgh_attach_context(), NOW(), \'snapshot\', NEW."my_pk", 1); RETURN NULL;',
                    hash="c321fa6883ef19d1715ba05823b8f182be769ae8",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_insert_16a4e",
                    table="tests_custommodel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="custommodel",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "tests_custommodelsnapshot" ("integer_field", "my_pk", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (NEW."integer_field", NEW."my_pk", _pgh_attach_context(), NOW(), \'snapshot\', NEW."my_pk", 2); RETURN NULL;',
                    hash="ba31627aa3ac92a6535c7bb009fe31f483bb00cc",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_update_47d37",
                    table="tests_custommodel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="custommodel",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_custommodelsnapshot" ("integer_field", "my_pk", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (OLD."integer_field", OLD."my_pk", _pgh_attach_context(), NOW(), \'snapshot\', OLD."my_pk", 3); RETURN NULL;',
                    hash="7401c0b3d18fedb2616417f49d58acf3e7c1fd89",
                    operation="DELETE",
                    pgid="pgtrigger_snapshot_delete_1bb54",
                    table="tests_custommodel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="denormcontext",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_no_id_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_denormcontexteventnoid" ("fk_field_id", "id", "int_field", "pgh_context", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (NEW."fk_field_id", NEW."id", NEW."int_field", COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_metadata\', TRUE), \'\'), NULL)::JSONB, NOW(), \'snapshot_no_id\', NEW."id", 1); RETURN NULL;',
                    hash="7855ba5bd43d9a6388a4f88edb94c82a024a6748",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_no_id_insert_f9f15",
                    table="tests_denormcontext",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="denormcontext",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_no_id_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "tests_denormcontexteventnoid" ("fk_field_id", "id", "int_field", "pgh_context", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (NEW."fk_field_id", NEW."id", NEW."int_field", COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_metadata\', TRUE), \'\'), NULL)::JSONB, NOW(), \'snapshot_no_id\', NEW."id", 2); RETURN NULL;',
                    hash="9a746e38b394df61abf480cab82f358f095db106",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_no_id_update_3c605",
                    table="tests_denormcontext",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="denormcontext",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_no_id_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_denormcontexteventnoid" ("fk_field_id", "id", "int_field", "pgh_context", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (OLD."fk_field_id", OLD."id", OLD."int_field", COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_metadata\', TRUE), \'\'), NULL)::JSONB, NOW(), \'snapshot_no_id\', OLD."id", 3); RETURN NULL;',
                    hash="dbbcef7f6f1bd1733ad3dd1e4f6429992cd95eaf",
                    operation="DELETE",
                    pgid="pgtrigger_snapshot_no_id_delete_6b6a3",
                    table="tests_denormcontext",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="denormcontext",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_denormcontextevent" ("fk_field_id", "id", "int_field", "pgh_context", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (NEW."fk_field_id", NEW."id", NEW."int_field", COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_metadata\', TRUE), \'\'), NULL)::JSONB, COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_id\', TRUE), \'\'), NULL)::UUID, NOW(), \'snapshot\', NEW."id", 1); RETURN NULL;',
                    hash="61e95eee90629e76ca659012df44f19edac1f116",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_insert_37e9f",
                    table="tests_denormcontext",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="denormcontext",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "tests_denormcontextevent" ("fk_field_id", "id", "int_field", "pgh_context", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (NEW."fk_field_id", NEW."id", NEW."int_field", COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_metadata\', TRUE), \'\'), NULL)::JSONB, COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_id\', TRUE), \'\'), NULL)::UUID, NOW(), \'snapshot\', NEW."id", 2); RETURN NULL;',
                    hash="7b2fff9b4c422cb3ed38e5a2454ea2e00d443c5f",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_update_ca16a",
                    table="tests_denormcontext",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="denormcontext",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_denormcontextevent" ("fk_field_id", "id", "int_field", "pgh_context", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (OLD."fk_field_id", OLD."id", OLD."int_field", COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_metadata\', TRUE), \'\'), NULL)::JSONB, COALESCE(NULLIF(CURRENT_SETTING(\'pghistory.context_id\', TRUE), \'\'), NULL)::UUID, NOW(), \'snapshot\', OLD."id", 3); RETURN NULL;',
                    hash="2f60999006e4e834ce99a25a87b2116a8c6f5866",
                    operation="DELETE",
                    pgid="pgtrigger_snapshot_delete_6b3b9",
                    table="tests_denormcontext",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="eventmodel",
            trigger=pgtrigger.compiler.Trigger(
                name="model_create",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_eventmodelevent" ("dt_field", "id", "int_field", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (NEW."dt_field", NEW."id", NEW."int_field", _pgh_attach_context(), NOW(), \'model.create\', NEW."id", 1); RETURN NULL;',
                    hash="c167d31ab336b9ec43b0467aa1d48ccecb30bda6",
                    operation="INSERT",
                    pgid="pgtrigger_model_create_bc0bd",
                    table="tests_eventmodel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="eventmodel",
            trigger=pgtrigger.compiler.Trigger(
                name="before_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_eventmodelevent" ("dt_field", "id", "int_field", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (OLD."dt_field", OLD."id", OLD."int_field", _pgh_attach_context(), NOW(), \'before_update\', OLD."id", 2); RETURN NULL;',
                    hash="12b636b483cbd8cc512c2ac967302a336a507944",
                    operation="UPDATE",
                    pgid="pgtrigger_before_update_aad5f",
                    table="tests_eventmodel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="eventmodel",
            trigger=pgtrigger.compiler.Trigger(
                name="before_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_eventmodelevent" ("dt_field", "id", "int_field", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (OLD."dt_field", OLD."id", OLD."int_field", _pgh_attach_context(), NOW(), \'before_delete\', OLD."id", 3); RETURN NULL;',
                    hash="c9b79e17425ff090f30e2c4df9212dc30877b764",
                    operation="DELETE",
                    pgid="pgtrigger_before_delete_d022b",
                    table="tests_eventmodel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="eventmodel",
            trigger=pgtrigger.compiler.Trigger(
                name="after_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."dt_field" IS DISTINCT FROM NEW."dt_field")',
                    func='INSERT INTO "tests_eventmodelevent" ("dt_field", "id", "int_field", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (NEW."dt_field", NEW."id", NEW."int_field", _pgh_attach_context(), NOW(), \'after_update\', NEW."id", 2); RETURN NULL;',
                    hash="bff27dee304e22b21b7baedbb6b4d6fdd9b94e95",
                    operation="UPDATE",
                    pgid="pgtrigger_after_update_5b8c8",
                    table="tests_eventmodel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="eventmodel",
            trigger=pgtrigger.compiler.Trigger(
                name="model_custom_create",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_customeventmodel" ("dt_field", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (NEW."dt_field", NOW(), \'model.custom_create\', NEW."id", 1); RETURN NULL;',
                    hash="35ca362584d7deb248c94db1ab7c968ab1c53e59",
                    operation="INSERT",
                    pgid="pgtrigger_model_custom_create_78c73",
                    table="tests_eventmodel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="eventmodel",
            trigger=pgtrigger.compiler.Trigger(
                name="model_custom_create_with_context",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_customeventwithcontext" ("dt_field", "id", "int_field", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (NEW."dt_field", NEW."id", NEW."int_field", _pgh_attach_context(), NOW(), \'model.custom_create_with_context\', NEW."id", 1); RETURN NULL;',
                    hash="fe20c1963fb336b7c6d9b12c5688b5a9dd98aee1",
                    operation="INSERT",
                    pgid="pgtrigger_model_custom_create_with_context_2b610",
                    table="tests_eventmodel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="snapshotimagefield",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_snapshotimagefieldevent" ("id", "img_field", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (NEW."id", NEW."img_field", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", 1); RETURN NULL;',
                    hash="9912c8a4d75c0a10724016a29be7f6c82bb237ca",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_insert_da4ed",
                    table="tests_snapshotimagefield",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="snapshotimagefield",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "tests_snapshotimagefieldevent" ("id", "img_field", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (NEW."id", NEW."img_field", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", 2); RETURN NULL;',
                    hash="af3922cb5489ec573c09803b58445149e389d8e0",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_update_ee078",
                    table="tests_snapshotimagefield",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="snapshotimagefield",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_snapshotimagefieldevent" ("id", "img_field", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (OLD."id", OLD."img_field", _pgh_attach_context(), NOW(), \'snapshot\', OLD."id", 3); RETURN NULL;',
                    hash="fe9b3f8da9ad1a418d401d50b3bb4084437a92d3",
                    operation="DELETE",
                    pgid="pgtrigger_snapshot_delete_5c962",
                    table="tests_snapshotimagefield",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="snapshotmodel",
            trigger=pgtrigger.compiler.Trigger(
                name="no_pgh_obj_snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_nopghobjsnapshot" ("dt_field", "fk_field_id", "id", "int_field", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_operation") VALUES (NEW."dt_field", NEW."fk_field_id", NEW."id", NEW."int_field", _pgh_attach_context(), NOW(), \'no_pgh_obj_snapshot\', 1); RETURN NULL;',
                    hash="47cb49720597581676645050fcc42fdf511a547e",
                    operation="INSERT",
                    pgid="pgtrigger_no_pgh_obj_snapshot_insert_d3501",
                    table="tests_snapshotmodel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="snapshotmodel",
            trigger=pgtrigger.compiler.Trigger(
                name="no_pgh_obj_snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "tests_nopghobjsnapshot" ("dt_field", "fk_field_id", "id", "int_field", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_operation") VALUES (NEW."dt_field", NEW."fk_field_id", NEW."id", NEW."int_field", _pgh_attach_context(), NOW(), \'no_pgh_obj_snapshot\', 2); RETURN NULL;',
                    hash="0a8be1222fb0f71aa2697b56dcc04560ec742e2a",
                    operation="UPDATE",
                    pgid="pgtrigger_no_pgh_obj_snapshot_update_015b7",
                    table="tests_snapshotmodel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="snapshotmodel",
            trigger=pgtrigger.compiler.Trigger(
                name="no_pgh_obj_snapshot_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_nopghobjsnapshot" ("dt_field", "fk_field_id", "id", "int_field", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_operation") VALUES (OLD."dt_field", OLD."fk_field_id", OLD."id", OLD."int_field", _pgh_attach_context(), NOW(), \'no_pgh_obj_snapshot\', 3); RETURN NULL;',
                    hash="5efe015907e50463d25af8f725586181763c2e82",
                    operation="DELETE",
                    pgid="pgtrigger_no_pgh_obj_snapshot_delete_c1411",
                    table="tests_snapshotmodel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="snapshotmodel",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_snapshotmodelsnapshot" ("dt_field", "fk_field_id", "id", "int_field", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (NEW."dt_field", NEW."fk_field_id", NEW."id", NEW."int_field", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", 1); RETURN NULL;',
                    hash="a763e1898fb88bc30755c23101b3501c75ba83ac",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_insert_287a7",
                    table="tests_snapshotmodel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="snapshotmodel",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "tests_snapshotmodelsnapshot" ("dt_field", "fk_field_id", "id", "int_field", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (NEW."dt_field", NEW."fk_field_id", NEW."id", NEW."int_field", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", 2); RETURN NULL;',
                    hash="563fe60b90eda5cabccd922a8c8ce971ca87f27f",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_update_4041c",
                    table="tests_snapshotmodel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="snapshotmodel",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_snapshotmodelsnapshot" ("dt_field", "fk_field_id", "id", "int_field", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (OLD."dt_field", OLD."fk_field_id", OLD."id", OLD."int_field", _pgh_attach_context(), NOW(), \'snapshot\', OLD."id", 3); RETURN NULL;',
                    hash="adf7220eb7f70aa87cf6b1e97c810d1e17c231dc",
                    operation="DELETE",
                    pgid="pgtrigger_snapshot_delete_ca013",
                    table="tests_snapshotmodel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="snapshotmodel",
            trigger=pgtrigger.compiler.Trigger(
                name="dt_field_int_field_snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_snapshotmodeldtfieldintfieldevent" ("dt_field", "int_field", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (NEW."dt_field", NEW."int_field", _pgh_attach_context(), NOW(), \'dt_field_int_field_snapshot\', NEW."id", 1); RETURN NULL;',
                    hash="df56ad846a52cfb555fdae428b68ce73675bddb3",
                    operation="INSERT",
                    pgid="pgtrigger_dt_field_int_field_snapshot_insert_85480",
                    table="tests_snapshotmodel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="snapshotmodel",
            trigger=pgtrigger.compiler.Trigger(
                name="dt_field_int_field_snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."dt_field" IS DISTINCT FROM NEW."dt_field" OR OLD."int_field" IS DISTINCT FROM NEW."int_field")',
                    func='INSERT INTO "tests_snapshotmodeldtfieldintfieldevent" ("dt_field", "int_field", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (NEW."dt_field", NEW."int_field", _pgh_attach_context(), NOW(), \'dt_field_int_field_snapshot\', NEW."id", 2); RETURN NULL;',
                    hash="3bb03e02a8ecd1de2ba5f083ce7eae7438880610",
                    operation="UPDATE",
                    pgid="pgtrigger_dt_field_int_field_snapshot_update_8246d",
                    table="tests_snapshotmodel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="snapshotmodel",
            trigger=pgtrigger.compiler.Trigger(
                name="dt_field_int_field_snapshot_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_snapshotmodeldtfieldintfieldevent" ("dt_field", "int_field", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (OLD."dt_field", OLD."int_field", _pgh_attach_context(), NOW(), \'dt_field_int_field_snapshot\', OLD."id", 3); RETURN NULL;',
                    hash="232358495c4d883c84b6075fcdf31cef529c6ec3",
                    operation="DELETE",
                    pgid="pgtrigger_dt_field_int_field_snapshot_delete_db5ee",
                    table="tests_snapshotmodel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="snapshotmodel",
            trigger=pgtrigger.compiler.Trigger(
                name="dt_field_snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_snapshotmodeldtfieldevent" ("dt_field", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (NEW."dt_field", _pgh_attach_context(), NOW(), \'dt_field_snapshot\', NEW."id", 1); RETURN NULL;',
                    hash="0104dd0c2af42c396c7e86f2e584d600bfdc958b",
                    operation="INSERT",
                    pgid="pgtrigger_dt_field_snapshot_insert_f46b8",
                    table="tests_snapshotmodel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="snapshotmodel",
            trigger=pgtrigger.compiler.Trigger(
                name="dt_field_snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."dt_field" IS DISTINCT FROM NEW."dt_field")',
                    func='INSERT INTO "tests_snapshotmodeldtfieldevent" ("dt_field", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (NEW."dt_field", _pgh_attach_context(), NOW(), \'dt_field_snapshot\', NEW."id", 2); RETURN NULL;',
                    hash="2270399e00de4d140097a5f49b4a56a77bcfec72",
                    operation="UPDATE",
                    pgid="pgtrigger_dt_field_snapshot_update_22f55",
                    table="tests_snapshotmodel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="snapshotmodel",
            trigger=pgtrigger.compiler.Trigger(
                name="dt_field_snapshot_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_snapshotmodeldtfieldevent" ("dt_field", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (OLD."dt_field", _pgh_attach_context(), NOW(), \'dt_field_snapshot\', OLD."id", 3); RETURN NULL;',
                    hash="00ac499970b15f766fa5a6ed0b4416d6d1b1de69",
                    operation="DELETE",
                    pgid="pgtrigger_dt_field_snapshot_delete_4e613",
                    table="tests_snapshotmodel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="snapshotmodel",
            trigger=pgtrigger.compiler.Trigger(
                name="custom_snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_customsnapshotmodel" ("fk_field_id", "id", "int_field", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (NEW."fk_field_id", NEW."id", NEW."int_field", NOW(), \'custom_snapshot\', NEW."id", 1); RETURN NULL;',
                    hash="a306c4fa8ef76f7e5776a8b2cf9f177d94b06c19",
                    operation="INSERT",
                    pgid="pgtrigger_custom_snapshot_insert_6d300",
                    table="tests_snapshotmodel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="snapshotmodel",
            trigger=pgtrigger.compiler.Trigger(
                name="custom_snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."id" IS DISTINCT FROM NEW."id" OR OLD."int_field" IS DISTINCT FROM NEW."int_field" OR OLD."fk_field_id" IS DISTINCT FROM NEW."fk_field_id")',
                    func='INSERT INTO "tests_customsnapshotmodel" ("fk_field_id", "id", "int_field", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (NEW."fk_field_id", NEW."id", NEW."int_field", NOW(), \'custom_snapshot\', NEW."id", 2); RETURN NULL;',
                    hash="f762a8672ae9cd74cac5610ccba0562bdd3e9f1c",
                    operation="UPDATE",
                    pgid="pgtrigger_custom_snapshot_update_5af3e",
                    table="tests_snapshotmodel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="snapshotmodel",
            trigger=pgtrigger.compiler.Trigger(
                name="custom_snapshot_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_customsnapshotmodel" ("fk_field_id", "id", "int_field", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (OLD."fk_field_id", OLD."id", OLD."int_field", NOW(), \'custom_snapshot\', OLD."id", 3); RETURN NULL;',
                    hash="d06bd75b6440fdc8c12efc2ebcf8e982d252d505",
                    operation="DELETE",
                    pgid="pgtrigger_custom_snapshot_delete_7d7d7",
                    table="tests_snapshotmodel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="uniqueconstraintmodel",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_uniqueconstraintmodelevent" ("id", "my_char_field", "my_int_field1", "my_int_field2", "my_one_to_one_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (NEW."id", NEW."my_char_field", NEW."my_int_field1", NEW."my_int_field2", NEW."my_one_to_one_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", 1); RETURN NULL;',
                    hash="490c4d6a54e2a9115f7c00470a30680b4e336aa7",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_insert_ed815",
                    table="tests_uniqueconstraintmodel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="uniqueconstraintmodel",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition="WHEN (OLD.* IS DISTINCT FROM NEW.*)",
                    func='INSERT INTO "tests_uniqueconstraintmodelevent" ("id", "my_char_field", "my_int_field1", "my_int_field2", "my_one_to_one_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (NEW."id", NEW."my_char_field", NEW."my_int_field1", NEW."my_int_field2", NEW."my_one_to_one_id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", 2); RETURN NULL;',
                    hash="e9d35245e8f60fe6180ce955a4788dc363d9e2b0",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_update_9e83c",
                    table="tests_uniqueconstraintmodel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="uniqueconstraintmodel",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_delete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_uniqueconstraintmodelevent" ("id", "my_char_field", "my_int_field1", "my_int_field2", "my_one_to_one_id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "pgh_operation") VALUES (OLD."id", OLD."my_char_field", OLD."my_int_field1", OLD."my_int_field2", OLD."my_one_to_one_id", _pgh_attach_context(), NOW(), \'snapshot\', OLD."id", 3); RETURN NULL;',
                    hash="fb512aa15c8eb052fb0a71639c474b3afc7affe4",
                    operation="DELETE",
                    pgid="pgtrigger_snapshot_delete_bf1e7",
                    table="tests_uniqueconstraintmodel",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="usergroups",
            trigger=pgtrigger.compiler.Trigger(
                name="group_add",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_usergroupsevent" ("group_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_operation", "user_id") VALUES (NEW."group_id", NEW."id", _pgh_attach_context(), NOW(), \'group.add\', 1, NEW."user_id"); RETURN NULL;',
                    hash="5756b5f824b4488b188a3a46e41fe55fe22fbd24",
                    operation="INSERT",
                    pgid="pgtrigger_group_add_9d386",
                    table="auth_user_groups",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="usergroups",
            trigger=pgtrigger.compiler.Trigger(
                name="group_remove",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "tests_usergroupsevent" ("group_id", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_operation", "user_id") VALUES (OLD."group_id", OLD."id", _pgh_attach_context(), NOW(), \'group.remove\', 3, OLD."user_id"); RETURN NULL;',
                    hash="56e59e2f4bce730db9f425574e9042ef7ee39b32",
                    operation="DELETE",
                    pgid="pgtrigger_group_remove_4d892",
                    table="auth_user_groups",
                    when="AFTER",
                ),
            ),
        ),
    ]
